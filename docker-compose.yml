# AI Act Navigator - Docker Compose Configuration
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-act-postgres
    environment:
      POSTGRES_DB: ai_act_navigator
      POSTGRES_USER: ai_act_admin
      POSTGRES_PASSWORD: secure_ai_act_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ai-act-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_act_admin -d ai_act_navigator"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # AI Act Navigator Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.debug
      args:
        CACHE_BUST: "clickable-cards-fix-2025-01-05"
    container_name: ai-act-navigator
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://ai_act_admin:secure_ai_act_2024@postgres:5432/ai_act_navigator?sslmode=disable
      SESSION_SECRET: ai_act_session_secret_change_in_production_2024_secure_governance_platform_64chars
      ENCRYPTION_KEY: a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456
      SECURITY_SALT: secure_ai_act_salt_2024_production_ready_governance_platform
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-act-network
    volumes:
      - app_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session storage (optional, for production scaling)
  redis:
    image: redis:7-alpine
    container_name: ai-act-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-act-network
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  ai-act-network:
    driver: bridge
